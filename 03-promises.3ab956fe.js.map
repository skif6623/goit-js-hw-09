{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SA4BA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,S,GAEpBA,E,KAnCM,CACXQ,KAAMC,SAASC,cAAc,WAG1BF,KAAKG,iBAAiB,UAAU,SAAAC,GACnCA,EAAIC,iBAOJ,IALA,IAAMC,EAAQC,OAAOH,EAAII,cAAcC,SAASjB,MAAMkB,OAChDC,EAAOJ,OAAOH,EAAII,cAAcC,SAASE,KAAKD,OAC9CE,EAASR,EAAII,cAAcC,SAASG,OAAOF,MAC7CG,EAAW,EAENC,EAAI,EAAGA,EAAIF,EAAQE,GAAK,EAAG,CAIlCxB,EAHAuB,GAAY,EACKP,EAAQK,EAAOG,GAG7BC,MAAK,SAAAC,G,IAAGzB,EAAQyB,EAARzB,SAAUC,EAAKwB,EAALxB,MACjBJ,EAAA6B,OAAOC,QAAQ,uBAAwCC,OAAf5B,EAAS,QAAY4B,OAAN3B,EAAM,M,IAE9D4B,OAAM,SAAAJ,G,IAAGzB,EAAQyB,EAARzB,SAAUC,EAAKwB,EAALxB,MAClBJ,EAAA6B,OAAOI,QAAQ,sBAAqCF,OAAf5B,EAAS,QAAY4B,OAAN3B,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector('.form'),\n};\n\nrefs.form.addEventListener('submit', evt => {\n  evt.preventDefault();\n\n  const delay = Number(evt.currentTarget.elements.delay.value);\n  const step = Number(evt.currentTarget.elements.step.value);\n  const amount = evt.currentTarget.elements.amount.value;\n  let position = 0;\n\n  for (let i = 0; i < amount; i += 1) {\n    position += 1;\n    const delaySum = delay + step * i;\n\n    createPromise(position, delaySum)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n});\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","form","document","querySelector","addEventListener","evt","preventDefault","delay1","Number","currentTarget","elements","value","step","amount","position1","i","then","param","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.3ab956fe.js.map"}